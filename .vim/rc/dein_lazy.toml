#####################################################################
# Edit util
#####################################################################
[[plugins]]
repo = 'Shougo/unite.vim'
if = "!has('nvim')"
on_cmd = 'Unite'
depends = ['neomru.vim']
hook_source = 'source ~/.vim/rc/plugins/unite.rc.vim'
hook_add = '''
    " Prefix key
    nnoremap [unite] <Nop>
    nmap <Space>u [unite]

    " Keymap
    " Current direcotry files
    nnoremap <silent> [unite]<C-p> :<C-u>Unite<Space>file_rec/async:!<CR>
    " Buffer files
    nnoremap <silent> [unite]<C-b> :<C-u>Unite buffer<CR>
    " Grep files
    nnoremap <silent> [unite]<C-g> :<C-u>Unite<Space>grep -buffer-name=search -auto-preview -no-quit -no-empty -resume<CR>
    " Recent files
    nnoremap <silent> [unite]<C-r> :<C-u>Unite file_mru buffer<CR>
    " Yank history
    nnoremap <silent> [unite]<C-y> :<C-u>Unite history/yank<CR>
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_map = ['<Plug>(EasyAlign)']
hook_add = '''
    vmap <Enter> <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'haya14busa/vim-asterisk'
on_map = [
    '<Plug>(asterisk-z*)',
    '<Plug>(asterisk-z#)',
    '<Plug>(asterisk-gz*)',
    '<Plug>(asterisk-gz#)',
]
hook_add = '''
    map *  <Plug>(asterisk-z*)
    map #  <Plug>(asterisk-z#)
    map g* <Plug>(asterisk-gz*)
    map g# <Plug>(asterisk-gz#)
'''


[[plugins]]
repo = 'Yggdroot/indentLine'
on_cmd = ['IndentLinesToggle']
hook_add = '''
    let g:loaded_indentLine = 1
    nnoremap <Space>i <C-u>:IndentLinesToggle<CR>
'''

#####################################################################
# Programing util
#####################################################################
[[plugins]]
repo = 'tyru/caw.vim'
on_map = ['<Plug>(caw:hatpos:toggle)', '<Plug>(caw:zeropos:toggle)']
hook_add = '''
    " Add comment to beginning line(consider whitespace)
    nmap <Leader>c <Plug>(caw:hatpos:toggle)
    vmap <Leader>c <Plug>(caw:hatpos:toggle)
    " Add comment to beginning line(ignore whitespace)
    nmap <Leader>, <Plug>(caw:zeropos:toggle)
    vmap <Leader>, <Plug>(caw:zeropos:toggle)
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
depends = ['vimproc.vim']
on_ft = ['python', 'go']
hook_source = '''
  source ~/.vim/rc/plugins/vimquickrun.rc.vim
'''

[[plugins]]
repo = 'w0rp/ale'
on_ft = ['go', 'python', 'javascript', 'html', 'css', 'markdown', 'make', 'vim']
hook_source = '''
    source ~/.vim/rc/plugins/ale.rc.vim
'''

[[plugins]]
repo = 'jsfaint/gen_tags.vim'
on_ft = ['python', 'go', 'vim']
hook_source = '''
    let g:gen_tags#ctags_auto_gen = 1
    let g:gen_tags#gtags_auto_gen = 0
'''

[[plugins]]
repo = 'janko-m/vim-test'
depends = ['vim-dispatch']
hook_source = '''
    let g:test#strategy = 'dispatch'
'''

[[plugins]]
repo = 'tpope/vim-dispatch'

[[plugins]]
repo = 'majutsushi/tagbar'
on_cmd = ['TagbarToggle']
hook_add = '''
    nnoremap <Leader>o :<C-u>TagbarToggle<CR>
    let g:tagbar_sort = 0
    let g:tagbar_case_insensitive = 1
    let g:tagbar_compact = 1
'''

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'
hook_add = '''
    nmap <silent> <Leader>w :<C-u>StripWhitespace<CR>
'''

#####################################################################
# Fuzzy Finder
#####################################################################

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
on_cmd = [
  'Files',
  'GFiles?',
  'Tags',
]
hook_add = '''
    " Keymap
    " Git change files
    nnoremap <C-j><C-g> :<C-u>GFiles?<CR>
    " Ctags index
    nnoremap <C-j><C-]> :<C-u>Tags<CR>
    " My cli setting
    nnoremap <C-j><C-v> :<C-u>Files ~/.dotfiles<CR>
'''

#####################################################################
# Other Util
#####################################################################
[[plugins]]
repo = 'kannokanno/previm'
depends = ['open-browser.vim']
on_ft = ['markdown']
hook_add = '''
    nnoremap <leader>p :PrevimOpen<CR>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ['NERDTreeToggle']
on_map = ['<plug>NERDTreeTabsToggle', '<plug>NERDTreeTabsFind']
depends = ['nerdtree-git-plugin', 'vim-nerdtree-tabs']
hook_add = '''
    let NERDTreeShowHidden=1
    let NERDTreeIgnore=['\.pyc$', '__pycache__']
    nmap <Leader>t <plug>NERDTreeTabsToggle<CR>
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
    let g:nerdtree_tabs_autofind = 0
    nmap <Leader>f <plug>NERDTreeTabsFind<CR>
'''

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
depends = ['vim-fugitive']

[[plugins]]
repo = 'tpope/vim-fugitive'
on_cmd = [
  'Git',
  'Gcommit',
  'Gstatus',
  'Gdiff',
  'Gblame',
  'Glog'
]
hook_add = '''
    nmap [figitive] <Nop>
    map <Leader>g [figitive]
    nnoremap <silent> [figitive]c :<C-u>Gcommit<CR>
    nnoremap <silent> [figitive]d :<C-u>Gdiff<CR>
    nnoremap <silent> [figitive]b :<C-u>Gblame<CR>
    nnoremap <silent> [figitive]l :<C-u>Glog<CR>
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
on_map = ['<Plug>(openbrowser-smart-search)']
hook_add = '''
    let g:netrw_nogx = 1 " disable netrw's gx mapping.
    nmap <Leader>b <Plug>(openbrowser-smart-search)
    vmap <Leader>b <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'lighttiger2505/lab.vim'
on_cmd = ['LabBrowse', 'LabIssue', 'LabMergeRequest']
hook_add = '''
    nnoremap <Leader>lb :<C-u>LabBrowse<CR>
    nnoremap <Leader>li :<C-u>LabIssue<CR>
    nnoremap <Leader>lm :<C-u>LabMergeRequest<CR>
'''

#####################################################################
# Syntax
#####################################################################
[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = ['markdown']
hook_add = '''
    let g:markdown_syntax_conceal = 0
'''

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_ft = ['markdown']
hook_add = '''
    let g:table_mode_corner = '|'
    let g:table_mode_always_active = 1
    let g:table_mode_syntax = 1
    let g:table_mode_auto_align = 1
    let g:table_mode_map_prefix = '<LocalLeader>t'

    augroup TableCommands
        autocmd!
        autocmd FileType markdown nnoremap <silent><LocalLeader>a :<C-u>TableModeRealign<CR>
        autocmd FileType markdown nnoremap <silent><LocalLeader>t :<C-u>Tableize<CR>
    augroup END
'''

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'IN3D/vim-raml'
on_ft = ['raml']

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']
hook_source = '''
    let g:vim_json_syntax_conceal = 0
    let g:indentLine_noConcealCursor = ""
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_ft = ['markdown', 'toml', 'help']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'chase/vim-ansible-yaml'
on_ft = ['yaml']
